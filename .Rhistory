plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=6),axis.title=element_text(size=10),
legend.position="none")
g
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name)) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), fill = "red", nudge_y = .2, size=2.5) +
scale_y_reverse( lim=c(20,0)) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=6),axis.title=element_text(size=10),
legend.position="none")
g
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name)) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name, fill = "red"), nudge_y = .2, size=2.5) +
scale_y_reverse( lim=c(20,0)) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=6),axis.title=element_text(size=10),
legend.position="none")
g
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name)) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), fill = "red", nudge_y = .2, size=2.5) +
scale_y_reverse( lim=c(20,0)) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=6),axis.title=element_text(size=10),
legend.position="none")
g
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name)) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .2, size=2.5) +
scale_y_reverse( lim=c(20,0)) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=6),axis.title=element_text(size=10),
legend.position="none")
g
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse( lim=c(20,0)) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=6),axis.title=element_text(size=10),
legend.position="none")
g
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse( lim=c(20,0)) +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse( lim=c(20,0)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
?scale_y_reverse
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,0), breaks=20) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,0), breaks=c(20,0)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,0), breaks = scales::pretty_breaks(n = 10)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,1), breaks = scales::pretty_breaks(n = 20)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
View(timesData_top20)
require(ggplot2)
require(plotly)
require(ggrepel)
require(scales)
setwd("/Users/johnkimnguyen/GitHub/college_rankings")
timesData <- read.csv("timesData.csv", sep=",") # Load in the data
timesData$world_rank <- as.numeric(as.character(timesData$world_rank)) # Convert from factors to numeric
timesData_top20 <- subset(timesData, world_rank <= 20) # Take only the top 20
timesData_top20$university_name <- abbreviate(timesData_top20$university_name, 12)
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,1), breaks = scales::pretty_breaks(n = 20)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
require(ggplot2)
require(plotly)
require(ggrepel)
require(scales)
setwd("/Users/johnkimnguyen/GitHub/college_rankings")
timesData <- read.csv("timesData.csv", sep=",") # Load in the data
timesData$world_rank <- as.numeric(as.character(timesData$world_rank)) # Convert from factors to numeric
timesData_top20 <- subset(timesData, world_rank <= 20) # Take only the top 20
timesData_top20$university_name <- abbreviate(timesData_top20$university_name, 20) # Abbreviate the names
require(ggplot2)
require(plotly)
require(ggrepel)
require(scales)
setwd("/Users/johnkimnguyen/GitHub/college_rankings")
timesData <- read.csv("timesData.csv", sep=",") # Load in the data
timesData$world_rank <- as.numeric(as.character(timesData$world_rank)) # Convert from factors to numeric
timesData_top20 <- subset(timesData, world_rank <= 20) # Take only the top 20
timesData_top20$university_name <- abbreviate(timesData_top20$university_name, 20) # Abbreviate the names
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,1), breaks = scales::pretty_breaks(n = 20)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
require(ggplot2)
require(plotly)
require(ggrepel)
require(scales)
setwd("/Users/johnkimnguyen/GitHub/college_rankings")
timesData <- read.csv("timesData.csv", sep=",") # Load in the data
timesData$world_rank <- as.numeric(as.character(timesData$world_rank)) # Convert from factors to numeric
timesData_top20 <- subset(timesData, world_rank <= 20) # Take only the top 20
timesData_top20$university_name <- abbreviate(timesData_top20$university_name,24)
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,1), breaks = scales::pretty_breaks(n = 20)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
View(timesData_top20)
require(ggplot2)
require(plotly)
require(ggrepel)
require(scales)
setwd("/Users/johnkimnguyen/GitHub/college_rankings")
timesData <- read.csv("timesData.csv", sep=",") # Load in the data
timesData$world_rank <- as.numeric(as.character(timesData$world_rank)) # Convert from factors to numeric
timesData_top20 <- subset(timesData, world_rank <= 20) # Take only the top 20
timesData_top20$university_name <- abbreviate(timesData_top20$university_name,30) # Abbreviate the long names
require(ggplot2)
require(plotly)
require(ggrepel)
require(scales)
setwd("/Users/johnkimnguyen/GitHub/college_rankings")
timesData <- read.csv("timesData.csv", sep=",") # Load in the data
timesData$world_rank <- as.numeric(as.character(timesData$world_rank)) # Convert from factors to numeric
timesData_top20 <- subset(timesData, world_rank <= 20) # Take only the top 20
timesData_top20$university_name <- abbreviate(timesData_top20$university_name,34) # Abbreviate the long names
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,1), breaks = scales::pretty_breaks(n = 20)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
require(ggplot2)
require(plotly)
require(ggrepel)
require(scales)
setwd("/Users/johnkimnguyen/GitHub/college_rankings")
timesData <- read.csv("timesData.csv", sep=",") # Load in the data
timesData$world_rank <- as.numeric(as.character(timesData$world_rank)) # Convert from factors to numeric
timesData_top20 <- subset(timesData, world_rank <= 20) # Take only the top 20
timesData_top20$university_name <- abbreviate(timesData_top20$university_name,30) # Abbreviate the long names
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,1), breaks = scales::pretty_breaks(n = 20)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
ggplotly(g)
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,1), breaks = scales::pretty_breaks(n = 20)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
g
install.packages("rCharts")
library(devtools)
install_github("ramnathv/rCharts@dev")
require(rCharts)
?rCharts
??rCharts
rCharts(world_rank ~ year, data=timesData_top20)
nPLots(world_rank ~ year, data=timesData_top20)
nPlot(world_rank ~ year, data=timesData_top20)
nPlot(world_rank ~ year, group=university_name, data=timesData_top20, type='scatterChart')
colnames(timesData_top20)
nPlot(world_rank ~ year, group=university_name, data=timesData_top20, type='scatterChart')
nPlot(world_rank ~ year, group="university_name", data=timesData_top20, type='scatterChart')
g <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20, type='scatterChart')
g$set(legendPosition = "none")
g <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20, type='scatterChart')
g$set(legendPosition = "none")
g
g <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart',
height = 380,
width = 590,
bounds = list(x=60, y=30, width=420, height=310),
xlab = "I am a changed x", #example of a custom x label
ylab = "I am a changed y"
)
g
g <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart',
height = 1200,
width = 860,
bounds = list(x=60, y=30, width=420, height=310),
xlab = "I am a changed x", #example of a custom x label
ylab = "I am a changed y"
)
g
g <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart',
height = 1200,
width = 860,
bounds = list(x=60, y=30, width=420, height=310),
xlab = "I am a changed x", #example of a custom x label
ylab = "I am a changed y"
)
g$legend(
x = 530,
y = 100,
width = 60,
height = 300,
horizontalAlign = "right"
)
g <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart',
height = 1200,
width = 860,
bounds = list(x=60, y=30, width=420, height=310),
xlab = "I am a changed x", #example of a custom x label
ylab = "I am a changed y"
)
g$legends(
x = 530,
y = 100,
width = 60,
height = 300,
horizontalAlign = "right"
)
?nPlot
g <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart',
height = 1200,
width = 860,
bounds = list(x=60, y=30, width=420, height=310),
xlab = "I am a changed x", #example of a custom x label
ylab = "I am a changed y"
)
g$set(legendPosition = "none")
p1 <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart',
height = 1200,
width = 860,
bounds = list(x=60, y=30, width=420, height=310),
xlab = "I am a changed x", #example of a custom x label
ylab = "I am a changed y"
)
p1$xAxis(axisLabel = 'Year')
p1$yAxis(axisLabel = 'World Rank')
p1 <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='lineChart',
height = 1200,
width = 860,
bounds = list(x=60, y=30, width=420, height=310),
xlab = "I am a changed x", #example of a custom x label
ylab = "I am a changed y"
)
p1$xAxis(axisLabel = 'Year')
p1$yAxis(axisLabel = 'World Rank')
p1 <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart',
height = 1200,
width = 860,
)
p1$xAxis(axisLabel = 'Year')
p1$yAxis(axisLabel = 'World Rank')
p1 <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart',
height = 1200,
width = 860)
p1$xAxis(axisLabel = 'Year')
p1$yAxis(axisLabel = 'World Rank')
require(ggplot2)
require(plotly)
require(ggrepel)
require(scales)
library(rCharts)
options(
rcharts.mode = 'iframesrc',
rcharts.cdn = TRUE,
RCHART_WIDTH = 1000,
RCHART_HEIGHT = 800
)
setwd("/Users/johnkimnguyen/GitHub/college_rankings")
timesData <- read.csv("timesData.csv", sep=",") # Load in the data
timesData$world_rank <- as.numeric(as.character(timesData$world_rank)) # Convert from factors to numeric
timesData_top20 <- subset(timesData, world_rank <= 20) # Take only the top 20
timesData_top20$university_name <- abbreviate(timesData_top20$university_name,30) # Abbreviate the long names
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,1), breaks = scales::pretty_breaks(n = 20)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
#g
p1 <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart')
p1$xAxis(axisLabel = 'Year')
p1$yAxis(axisLabel = 'World Rank')
p1
p1
p1 <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart', id='rank')
p1$xAxis(axisLabel = 'Year')
p1$yAxis(axisLabel = 'World Rank')
p1
p1 <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart', id='rank')
p1
require(ggplot2)
require(plotly)
require(ggrepel)
require(scales)
library(rCharts)
options(
rcharts.cdn = TRUE,
RCHART_WIDTH = 1000,
RCHART_HEIGHT = 800
)
setwd("/Users/johnkimnguyen/GitHub/college_rankings")
timesData <- read.csv("timesData.csv", sep=",") # Load in the data
timesData$world_rank <- as.numeric(as.character(timesData$world_rank)) # Convert from factors to numeric
timesData_top20 <- subset(timesData, world_rank <= 20) # Take only the top 20
timesData_top20$university_name <- abbreviate(timesData_top20$university_name,30) # Abbreviate the long names
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,1), breaks = scales::pretty_breaks(n = 20)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
#g
p1 <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart', id='rank')
p1$xAxis(axisLabel = 'Year')
p1$yAxis(axisLabel = 'World Rank')
p1
require(ggplot2)
require(plotly)
require(ggrepel)
require(scales)
library(rCharts)
options(
RCHART_WIDTH = 1000,
RCHART_HEIGHT = 800
)
setwd("/Users/johnkimnguyen/GitHub/college_rankings")
timesData <- read.csv("timesData.csv", sep=",") # Load in the data
timesData$world_rank <- as.numeric(as.character(timesData$world_rank)) # Convert from factors to numeric
timesData_top20 <- subset(timesData, world_rank <= 20) # Take only the top 20
timesData_top20$university_name <- abbreviate(timesData_top20$university_name,30) # Abbreviate the long names
g <- ggplot(data=timesData_top20, aes(x=year, y=world_rank, label=university_name)) +
geom_line(aes(group=university_name), alpha=.5) +
geom_point(size=3, alpha=.5, color='red') +
geom_text_repel(aes(group = university_name), nudge_y = .15, size=2.5) +
scale_y_reverse(lim=c(20,1), breaks = scales::pretty_breaks(n = 20)) +
ggtitle("Top 20 Times World Universities") +
xlab("Year") +
ylab("World Rank") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"), axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size=12), legend.title=element_blank(),
axis.text = element_text(size=8),axis.title=element_text(size=12),
legend.position="none")
#g
p1 <- nPlot(world_rank ~ year, group="university_name", data=timesData_top20,
type='scatterChart', id='rank')
p1$xAxis(axisLabel = 'Year')
p1$yAxis(axisLabel = 'World Rank')
p1
